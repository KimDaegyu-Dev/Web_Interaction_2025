{"version":3,"file":"index-25e5e6d7.js","sources":["../../../week7/pkg/game_of_life_bg.wasm?url","../../../../../../../../__vite-plugin-wasm-helper","../../../week7/pkg/game_of_life_bg.js","../../../week7/pkg/game_of_life_bg.wasm","../../../week7/pkg/game_of_life.js","../../../week7/www/src/constants.ts","../../../week7/www/src/dom.ts","../../../week7/www/src/audio.ts","../../../week7/www/src/game.ts","../../../week7/www/src/hangul.ts","../../../week7/www/src/index.ts"],"sourcesContent":["export default \"__VITE_ASSET__0f57ca31__\"","export default async (opts = {}, url) => {\n    let result;\n    if (url.startsWith(\"data:\")) {\n        const urlContent = url.replace(/^data:.*?base64,/, \"\");\n        let bytes;\n        if (typeof Buffer === \"function\" && typeof Buffer.from === \"function\") {\n            bytes = Buffer.from(urlContent, \"base64\");\n        }\n        else if (typeof atob === \"function\") {\n            const binaryString = atob(urlContent);\n            bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n        }\n        else {\n            throw new Error(\"Cannot decode base64-encoded data URL\");\n        }\n        result = await WebAssembly.instantiate(bytes, opts);\n    }\n    else {\n        // https://github.com/mdn/webassembly-examples/issues/5\n        // WebAssembly.instantiateStreaming requires the server to provide the\n        // correct MIME type for .wasm files, which unfortunately doesn't work for\n        // a lot of static file servers, so we just work around it by getting the\n        // raw buffer.\n        // @ts-ignore\n        const response = await fetch(url);\n        const contentType = response.headers.get(\"Content-Type\") || \"\";\n        if (\"instantiateStreaming\" in WebAssembly && contentType.startsWith(\"application/wasm\")) {\n            result = await WebAssembly.instantiateStreaming(response, opts);\n        }\n        else {\n            const buffer = await response.arrayBuffer();\n            result = await WebAssembly.instantiate(buffer, opts);\n        }\n    }\n    return result.instance.exports;\n}","let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nconst cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n * @enum {0 | 1}\n */\nexport const Cell = Object.freeze({\n    Dead: 0, \"0\": \"Dead\",\n    Alive: 1, \"1\": \"Alive\",\n});\n\nconst WorldFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_world_free(ptr >>> 0, 1));\n\nexport class World {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WorldFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_world_free(ptr, 0);\n    }\n    /**\n     * @param {number} width\n     * @param {number} height\n     */\n    constructor(width, height) {\n        const ret = wasm.world_new(width, height);\n        this.__wbg_ptr = ret >>> 0;\n        WorldFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    /**\n     * @param {Array<any>} consonants\n     * @param {Array<any>} vowels\n     */\n    update_char_sets(consonants, vowels) {\n        wasm.world_update_char_sets(this.__wbg_ptr, consonants, vowels);\n    }\n    /**\n     * @param {string} speech_mode\n     * @returns {Array<any>}\n     */\n    tick(speech_mode) {\n        const ret = wasm.world_tick(this.__wbg_ptr, speech_mode);\n        return ret;\n    }\n    /**\n     * @returns {number}\n     */\n    width() {\n        const ret = wasm.world_width(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    height() {\n        const ret = wasm.world_height(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    get_consonant_grid_ptr() {\n        const ret = wasm.world_get_consonant_grid_ptr(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    get_vowel_grid_ptr() {\n        const ret = wasm.world_get_vowel_grid_ptr(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    get_syllable_grid_ptr() {\n        const ret = wasm.world_get_syllable_grid_ptr(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    get_prev_consonant_grid_ptr() {\n        const ret = wasm.world_get_prev_consonant_grid_ptr(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    get_prev_vowel_grid_ptr() {\n        const ret = wasm.world_get_prev_vowel_grid_ptr(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    get_prev_syllable_grid_ptr() {\n        const ret = wasm.world_get_prev_syllable_grid_ptr(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @param {number} row\n     * @param {number} col\n     * @param {string} cell_type\n     */\n    toggle_cell(row, col, cell_type) {\n        wasm.world_toggle_cell(this.__wbg_ptr, row, col, cell_type);\n    }\n}\n\nexport function __wbg_error_7534b8e9a36f1ab4(arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n    }\n};\n\nexport function __wbg_get_a131a44bd1eb6979(arg0, arg1) {\n    const ret = arg0[arg1 >>> 0];\n    return ret;\n};\n\nexport function __wbg_length_f00ec12454a5d9fd(arg0) {\n    const ret = arg0.length;\n    return ret;\n};\n\nexport function __wbg_new_58353953ad2097cc() {\n    const ret = new Array();\n    return ret;\n};\n\nexport function __wbg_new_8a6f238a6ece86ea() {\n    const ret = new Error();\n    return ret;\n};\n\nexport function __wbg_push_73fd7b5550ebf707(arg0, arg1) {\n    const ret = arg0.push(arg1);\n    return ret;\n};\n\nexport function __wbg_random_ed8db01c11e5a642() {\n    const ret = Math.random();\n    return ret;\n};\n\nexport function __wbg_stack_0ed75d68575b0f3c(arg0, arg1) {\n    const ret = arg1.stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbindgen_init_externref_table() {\n    const table = wasm.__wbindgen_export_3;\n    const offset = table.grow(4);\n    table.set(0, undefined);\n    table.set(offset + 0, undefined);\n    table.set(offset + 1, null);\n    table.set(offset + 2, true);\n    table.set(offset + 3, false);\n    ;\n};\n\nexport function __wbindgen_string_get(arg0, arg1) {\n    const obj = arg1;\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n    getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n};\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return ret;\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","\nURL = globalThis.URL\nimport __vite__wasmUrl from \"/Users/gimdaegyu/Documents/GitHub/Web_Interaction_2025/week7/pkg/game_of_life_bg.wasm?url\"\nimport __vite__initWasm from \"/__vite-plugin-wasm-helper\"\nimport * as __vite__wasmImport_0 from \"./game_of_life_bg.js\";\nconst __vite__wasmModule = await __vite__initWasm({ \"./game_of_life_bg.js\": { \"__wbg_random_ed8db01c11e5a642\": __vite__wasmImport_0[\"__wbg_random_ed8db01c11e5a642\"],\n\"__wbindgen_string_get\": __vite__wasmImport_0[\"__wbindgen_string_get\"],\n\"__wbindgen_string_new\": __vite__wasmImport_0[\"__wbindgen_string_new\"],\n\"__wbg_new_8a6f238a6ece86ea\": __vite__wasmImport_0[\"__wbg_new_8a6f238a6ece86ea\"],\n\"__wbg_stack_0ed75d68575b0f3c\": __vite__wasmImport_0[\"__wbg_stack_0ed75d68575b0f3c\"],\n\"__wbg_error_7534b8e9a36f1ab4\": __vite__wasmImport_0[\"__wbg_error_7534b8e9a36f1ab4\"],\n\"__wbg_get_a131a44bd1eb6979\": __vite__wasmImport_0[\"__wbg_get_a131a44bd1eb6979\"],\n\"__wbg_length_f00ec12454a5d9fd\": __vite__wasmImport_0[\"__wbg_length_f00ec12454a5d9fd\"],\n\"__wbg_new_58353953ad2097cc\": __vite__wasmImport_0[\"__wbg_new_58353953ad2097cc\"],\n\"__wbg_push_73fd7b5550ebf707\": __vite__wasmImport_0[\"__wbg_push_73fd7b5550ebf707\"],\n\"__wbindgen_throw\": __vite__wasmImport_0[\"__wbindgen_throw\"],\n\"__wbindgen_init_externref_table\": __vite__wasmImport_0[\"__wbindgen_init_externref_table\"] } }, __vite__wasmUrl);\nexport const memory = __vite__wasmModule.memory;\nexport const __wbg_world_free = __vite__wasmModule.__wbg_world_free;\nexport const world_new = __vite__wasmModule.world_new;\nexport const world_update_char_sets = __vite__wasmModule.world_update_char_sets;\nexport const world_tick = __vite__wasmModule.world_tick;\nexport const world_width = __vite__wasmModule.world_width;\nexport const world_height = __vite__wasmModule.world_height;\nexport const world_get_consonant_grid_ptr = __vite__wasmModule.world_get_consonant_grid_ptr;\nexport const world_get_vowel_grid_ptr = __vite__wasmModule.world_get_vowel_grid_ptr;\nexport const world_get_syllable_grid_ptr = __vite__wasmModule.world_get_syllable_grid_ptr;\nexport const world_get_prev_consonant_grid_ptr = __vite__wasmModule.world_get_prev_consonant_grid_ptr;\nexport const world_get_prev_vowel_grid_ptr = __vite__wasmModule.world_get_prev_vowel_grid_ptr;\nexport const world_get_prev_syllable_grid_ptr = __vite__wasmModule.world_get_prev_syllable_grid_ptr;\nexport const world_toggle_cell = __vite__wasmModule.world_toggle_cell;\nexport const __wbindgen_free = __vite__wasmModule.__wbindgen_free;\nexport const __wbindgen_malloc = __vite__wasmModule.__wbindgen_malloc;\nexport const __wbindgen_realloc = __vite__wasmModule.__wbindgen_realloc;\nexport const __wbindgen_export_3 = __vite__wasmModule.__wbindgen_export_3;\nexport const __wbindgen_start = __vite__wasmModule.__wbindgen_start;\n","import * as wasm from \"./game_of_life_bg.wasm\";\nexport * from \"./game_of_life_bg.js\";\nimport { __wbg_set_wasm } from \"./game_of_life_bg.js\";\n__wbg_set_wasm(wasm);\nwasm.__wbindgen_start();\n","export const CELL_SIZE = window.innerWidth * 0.05;\nexport const GRID_COLOR = \"#ffffff59\";\nexport const DEAD_COLOR = \"#FFFFFF\";\nexport const ALIVE_COLOR = [\"#00ff00\", \"#0000ff\", \"#ff0000\"];\nexport const targetFPS = 4;\nexport const frameDuration = 1000 / targetFPS;\n","import { CELL_SIZE, GRID_COLOR } from \"./constants\";\nimport { World } from \"wasm-game-of-life\";\nimport { memory } from \"wasm-game-of-life/game_of_life_bg.wasm\";\n\nexport const canvas = document.getElementById(\n  \"game-of-life-canvas\"\n) as HTMLCanvasElement;\nexport const playPauseButton = document.getElementById(\n  \"play-pause\"\n) as HTMLButtonElement;\nexport const speechModeSelect = document.getElementById(\n  \"speech-mode-select\"\n) as HTMLSelectElement;\n\nexport const pitchSlider = document.getElementById(\n  \"pitch-slider\"\n) as HTMLInputElement;\nexport const pitchValue = document.getElementById(\n  \"pitch-value\"\n) as HTMLSpanElement;\nexport const rateSlider = document.getElementById(\n  \"rate-slider\"\n) as HTMLInputElement;\nexport const rateValue = document.getElementById(\n  \"rate-value\"\n) as HTMLSpanElement;\n\nlet fontSizeGrid: number[];\n\nexport const setupCanvas = (width: number, height: number) => {\n  canvas.height = (CELL_SIZE + 1) * height + 1;\n  canvas.width = (CELL_SIZE + 1) * width + 1;\n  // Initialize font size grid\n  fontSizeGrid = new Array(width * height).fill(0);\n};\n\nconst ctx = canvas.getContext(\"2d\");\n\nexport const drawGrid = (width: number, height: number) => {\n  if (!ctx) return;\n  ctx.beginPath();\n  ctx.strokeStyle = GRID_COLOR;\n\n  // Vertical lines.\n  for (let i = 0; i <= width; i++) {\n    ctx.moveTo(i * (CELL_SIZE + 1) + 1, 0);\n    ctx.lineTo(i * (CELL_SIZE + 1) + 1, (CELL_SIZE + 1) * height + 1);\n  }\n\n  // Horizontal lines.\n  for (let j = 0; j <= height; j++) {\n    ctx.moveTo(0, j * (CELL_SIZE + 1) + 1);\n    ctx.lineTo((CELL_SIZE + 1) * width + 1, j * (CELL_SIZE + 1) + 1);\n  }\n\n  ctx.stroke();\n};\n\nexport const drawCells = (world: World) => {\n  if (!ctx) return;\n\n  const width = world.width();\n  const height = world.height();\n  const size = width * height;\n\n  // Get pointers to current grids\n  const consonantPtr = world.get_consonant_grid_ptr();\n  const vowelPtr = world.get_vowel_grid_ptr();\n  const syllablePtr = world.get_syllable_grid_ptr();\n  // Get pointers to previous grids\n  const prevConsonantPtr = world.get_prev_consonant_grid_ptr();\n  const prevVowelPtr = world.get_prev_vowel_grid_ptr();\n  const prevSyllablePtr = world.get_prev_syllable_grid_ptr();\n\n  // Create views on wasm memory\n  const consonantGrid = new Uint16Array(memory.buffer, consonantPtr, size);\n  const vowelGrid = new Uint16Array(memory.buffer, vowelPtr, size);\n  const syllableGrid = new Uint16Array(memory.buffer, syllablePtr, size);\n  const prevConsonantGrid = new Uint16Array(memory.buffer, prevConsonantPtr, size);\n  const prevVowelGrid = new Uint16Array(memory.buffer, prevVowelPtr, size);\n  const prevSyllableGrid = new Uint16Array(memory.buffer, prevSyllablePtr, size);\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  drawGrid(width, height);\n\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n\n  for (let i = 0; i < size; i++) {\n    const row = Math.floor(i / width);\n    const col = i % width;\n    \n    // Determine current and previous character codes for comparison\n    const currentCharCode = syllableGrid[i] || consonantGrid[i] || vowelGrid[i];\n    const prevCharCode = prevSyllableGrid[i] || prevConsonantGrid[i] || prevVowelGrid[i];\n\n    if (currentCharCode !== 0) {\n      // If cell is newly born or has changed, assign a new random font size\n      if (currentCharCode !== prevCharCode) {\n        const randomFactor = (Math.random() - 0.5) * 2; // -1 to 1\n        const sizeVariation = CELL_SIZE * 0.5 * randomFactor; // Vary by up to 50%\n        fontSizeGrid[i] = CELL_SIZE + sizeVariation;\n      }\n\n      const fontSize = fontSizeGrid[i] || CELL_SIZE; // Fallback to default size\n      ctx.font = `${fontSize}px \"Noto Sans KR\"`;\n\n      const char = String.fromCharCode(currentCharCode);\n      const x = col * (CELL_SIZE + 1) + (CELL_SIZE / 2) + 1;\n      const y = row * (CELL_SIZE + 1) + (CELL_SIZE / 2) + 1;\n\n      if (syllableGrid[i] !== 0) {\n        ctx.fillStyle = \"black\";\n        ctx.fillText(char, x, y);\n      } else if (consonantGrid[i] !== 0) {\n        ctx.fillStyle = \"blue\";\n        ctx.fillText(char, x, y);\n      } else if (vowelGrid[i] !== 0) {\n        ctx.fillStyle = \"red\";\n        ctx.fillText(char, x, y);\n      }\n    }\n  }\n};","import { pitchSlider, rateSlider } from \"./dom\";\n\nlet synth: SpeechSynthesis;\nlet voices: SpeechSynthesisVoice[];\n\nexport const initSpeech = () => {\n  synth = window.speechSynthesis;\n  // It's possible that the voices are not loaded yet.\n  // We need to listen for the voiceschanged event.\n  synth.onvoiceschanged = () => {\n    voices = synth.getVoices();\n  };\n  voices = synth.getVoices();\n};\n\nexport const speak = (text: string): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (!synth) {\n      const err = \"Speech synthesis not initialized.\";\n      console.error(err);\n      return reject(err);\n    }\n    // Cancel any pending speech to prevent overlap.\n    synth.cancel();\n\n    const utterance = new SpeechSynthesisUtterance(text);\n    const koreanVoice = voices.find((voice) => voice.lang === \"ko-KR\");\n    if (koreanVoice) {\n      utterance.voice = koreanVoice;\n    } else {\n      console.warn(\"Korean voice not found. Using default voice.\");\n    }\n    utterance.pitch = parseFloat(pitchSlider.value);\n    utterance.rate = parseFloat(rateSlider.value);\n\n    utterance.onend = () => {\n      resolve();\n    };\n\n    utterance.onerror = (event) => {\n      console.error(\"Speech synthesis error:\", event.error);\n      reject(event.error);\n    };\n\n    synth.speak(utterance);\n  });\n};\n","import { World } from \"wasm-game-of-life\";\nimport { CELL_SIZE, frameDuration } from \"./constants\";\nimport { drawCells, setupCanvas, speechModeSelect } from \"./dom\";\nimport { speak } from \"./audio\";\n\nlet world: World;\nlet animationId: number | null = null;\nlet lastTime = 0;\n\nexport const initGame = () => {\n  const width = Math.floor(window.innerWidth / (CELL_SIZE + 1));\n  const height = Math.floor(window.innerHeight / (CELL_SIZE + 1));\n  \n  world = new World(width, height);\n  setupCanvas(width, height);\n  \n  drawCells(world);\n};\n\nconst renderLoop = async () => {\n  if (isPaused()) return;\n\n  const now = performance.now();\n  if (now - lastTime < frameDuration) {\n      animationId = requestAnimationFrame(renderLoop);\n      return;\n  }\n  lastTime = now;\n\n  const syllablesToSpeak = world.tick(speechModeSelect.value);\n  \n  drawCells(world);\n\n  if (syllablesToSpeak.length > 0) {\n    await speak(syllablesToSpeak.join(\" \"));\n  }\n\n  if (!isPaused()) {\n    animationId = requestAnimationFrame(renderLoop);\n  }\n};\n\nexport const isPaused = () => {\n  return animationId === null;\n};\n\nexport const play = () => {\n  if (!isPaused()) return;\n  animationId = 0; \n  renderLoop();\n};\n\nexport const pause = () => {\n  if (isPaused()) return;\n  if (animationId) {\n    cancelAnimationFrame(animationId);\n  }\n  animationId = null;\n  window.speechSynthesis.cancel();\n};\n\nexport const reset = () => {\n    if (!isPaused()) {\n        pause();\n    }\n    initGame();\n}\n\nexport const getWorld = () => world;\n","import { World } from \"wasm-game-of-life\";\n\nconst ALL_INITIAL_CONSONANTS = [\n  \"ㄱ\",\n  \"ㄲ\",\n  \"ㄴ\",\n  \"ㄷ\",\n  \"ㄸ\",\n  \"ㄹ\",\n  \"ㅁ\",\n  \"ㅂ\",\n  \"ㅃ\",\n  \"ㅅ\",\n  \"ㅆ\",\n  \"ㅇ\",\n  \"ㅈ\",\n  \"ㅉ\",\n  \"ㅊ\",\n  \"ㅋ\",\n  \"ㅌ\",\n  \"ㅍ\",\n  \"ㅎ\",\n];\nconst ALL_MEDIAL_VOWELS = [\n  \"ㅏ\",\n  \"ㅐ\",\n  \"ㅑ\",\n  \"ㅒ\",\n  \"ㅓ\",\n  \"ㅔ\",\n  \"ㅕ\",\n  \"ㅖ\",\n  \"ㅗ\",\n  \"ㅘ\",\n  \"ㅙ\",\n  \"ㅚ\",\n  \"ㅛ\",\n  \"ㅜ\",\n  \"ㅝ\",\n  \"ㅞ\",\n  \"ㅟ\",\n  \"ㅠ\",\n  \"ㅡ\",\n  \"ㅢ\",\n  \"ㅣ\",\n];\nconst FINAL_CONSONANTS_ARRAY = [\n  \"\",\n  \"ㄱ\",\n  \"ㄲ\",\n  \"ㄳ\",\n  \"ㄴ\",\n  \"ㄵ\",\n  \"ㄶ\",\n  \"ㄷ\",\n  \"ㄹ\",\n  \"ㄺ\",\n  \"ㄻ\",\n  \"ㄼ\",\n  \"ㄽ\",\n  \"ㄾ\",\n  \"ㄿ\",\n  \"ㅀ\",\n  \"ㅁ\",\n  \"ㅂ\",\n  \"ㅄ\",\n  \"ㅅ\",\n  \"ㅆ\",\n  \"ㅇ\",\n  \"ㅈ\",\n  \"ㅊ\",\n  \"ㅋ\",\n  \"ㅌ\",\n  \"ㅍ\",\n  \"ㅎ\",\n];\n\nexport const updateHangulSetOnWasm = (world: World, text: string) => {\n  if (!text.trim()) {\n    world.update_char_sets([], []);\n    return;\n  }\n\n  const HANGUL_BASE_CODE = 44032;\n  const HANGUL_END_CODE = 55203;\n  const INITIAL_CONSONANT_MULTIPLIER = 588;\n  const MEDIAL_VOWEL_MULTIPLIER = 28;\n\n  const foundConsonants = new Set<string>();\n  const foundVowels = new Set<string>();\n\n  for (const char of text) {\n    const code = char.charCodeAt(0);\n\n    if (code >= HANGUL_BASE_CODE && code <= HANGUL_END_CODE) {\n      const relativeCode = code - HANGUL_BASE_CODE;\n\n      const initialIndex = Math.floor(\n        relativeCode / INITIAL_CONSONANT_MULTIPLIER\n      );\n      foundConsonants.add(ALL_INITIAL_CONSONANTS[initialIndex]);\n\n      const medialIndex = Math.floor(\n        (relativeCode % INITIAL_CONSONANT_MULTIPLIER) / MEDIAL_VOWEL_MULTIPLIER\n      );\n      foundVowels.add(ALL_MEDIAL_VOWELS[medialIndex]);\n\n      const finalIndex = relativeCode % MEDIAL_VOWEL_MULTIPLIER;\n      if (finalIndex > 0) {\n        const finalConsonant = FINAL_CONSONANTS_ARRAY[finalIndex];\n        switch (finalConsonant) {\n          case \"ㄳ\":\n            foundConsonants.add(\"ㄱ\");\n            foundConsonants.add(\"ㅅ\");\n            break;\n          case \"ㄵ\":\n            foundConsonants.add(\"ㄴ\");\n            foundConsonants.add(\"ㅈ\");\n            break;\n          case \"ㄶ\":\n            foundConsonants.add(\"ㄴ\");\n            foundConsonants.add(\"ㅎ\");\n            break;\n          case \"ㄺ\":\n            foundConsonants.add(\"ㄹ\");\n            foundConsonants.add(\"ㄱ\");\n            break;\n          case \"ㄻ\":\n            foundConsonants.add(\"ㄹ\");\n            foundConsonants.add(\"ㅁ\");\n            break;\n          case \"ㄼ\":\n            foundConsonants.add(\"ㄹ\");\n            foundConsonants.add(\"ㅂ\");\n            break;\n          case \"ㄽ\":\n            foundConsonants.add(\"ㄹ\");\n            foundConsonants.add(\"ㅅ\");\n            break;\n          case \"ㄾ\":\n            foundConsonants.add(\"ㄹ\");\n            foundConsonants.add(\"ㅌ\");\n            break;\n          case \"ㄿ\":\n            foundConsonants.add(\"ㄹ\");\n            foundConsonants.add(\"ㅍ\");\n            break;\n          case \"ㅀ\":\n            foundConsonants.add(\"ㄹ\");\n            foundConsonants.add(\"ㅎ\");\n            break;\n          case \"ㅄ\":\n            foundConsonants.add(\"ㅂ\");\n            foundConsonants.add(\"ㅅ\");\n            break;\n          default:\n            foundConsonants.add(finalConsonant);\n        }\n      }\n    } else if (ALL_INITIAL_CONSONANTS.includes(char)) {\n      foundConsonants.add(char);\n    } else if (ALL_MEDIAL_VOWELS.includes(char)) {\n      foundVowels.add(char);\n    }\n  }\n\n  world.update_char_sets(Array.from(foundConsonants), Array.from(foundVowels));\n};\n","import { play, pause, isPaused, initGame, getWorld, reset } from \"./game\";\nimport {\n  playPauseButton,\n  canvas,\n  drawCells,\n  pitchSlider,\n  pitchValue,\n  rateSlider,\n  rateValue,\n} from \"./dom\";\nimport { initSpeech } from \"./audio\";\nimport { updateHangulSetOnWasm } from \"./hangul\";\nimport { CELL_SIZE } from \"./constants\";\n\ninitGame();\ninitSpeech();\nplayPauseButton.textContent = \"▶\";\n\nplayPauseButton.addEventListener(\"click\", () => {\n  if (isPaused()) {\n    play();\n    playPauseButton.textContent = \"⏸\";\n  } else {\n    pause();\n    playPauseButton.textContent = \"▶\";\n  }\n});\n\nconst hangulInput = document.getElementById(\"hangul-input\") as HTMLInputElement;\nconst applyHangulButton = document.getElementById(\n  \"apply-hangul\"\n) as HTMLButtonElement;\nconst brushSelect = document.getElementById(\n  \"brush-select\"\n) as HTMLSelectElement;\nconst modeSelect = document.getElementById(\"mode-select\") as HTMLSelectElement;\n\napplyHangulButton.addEventListener(\"click\", () => {\n  const text = hangulInput.value;\n  // First, reset the game to get a fresh world instance.\n  reset();\n  // Then, get the new world and update its character set.\n  const world = getWorld();\n  updateHangulSetOnWasm(world, text);\n\n  // Ensure the UI reflects the paused state after reset.\n  if (!isPaused()) {\n    pause();\n  }\n  playPauseButton.textContent = \"▶\";\n});\nconst brushPatterns = {\n  single: [{ row: 0, col: 0 }],\n  blinker: [\n    { row: 0, col: -1 },\n    { row: 0, col: 0 },\n    { row: 0, col: 1 },\n  ],\n  glider: [\n    { row: -1, col: 0 },\n    { row: 0, col: 1 },\n    { row: 1, col: -1 },\n    { row: 1, col: 0 },\n    { row: 1, col: 1 },\n  ],\n  spear: [\n    { row: -2, col: 0 },\n    { row: -1, col: 0 },\n    { row: 0, col: 1 },\n    { row: 0, col: -1 },\n  ],\n};\n\ncanvas.addEventListener(\"click\", (event) => {\n  const world = getWorld();\n  const boundingRect = canvas.getBoundingClientRect();\n\n  const scaleX = canvas.width / boundingRect.width;\n  const scaleY = canvas.height / boundingRect.height;\n\n  const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n  const canvasTop = (event.clientY - boundingRect.top) * scaleY;\n\n  const clickRow = Math.floor(canvasTop / (CELL_SIZE + 1));\n  const clickCol = Math.floor(canvasLeft / (CELL_SIZE + 1));\n\n  const selectedBrush = brushSelect.value as keyof typeof brushPatterns;\n  const pattern = brushPatterns[selectedBrush];\n  const selectedMode = modeSelect.value;\n  const randomMode = Math.random() > 0.5;\n  pattern.forEach((offset) => {\n    const row = (clickRow + offset.row + world.height()) % world.height();\n    const col = (clickCol + offset.col + world.width()) % world.width();\n    world.toggle_cell(\n      row,\n      col,\n      selectedMode === \"random\"\n        ? randomMode\n          ? \"consonant\"\n          : \"vowel\"\n        : selectedMode\n    );\n  });\n\n  // Draw immediately for responsiveness, without waiting for the next tick.\n  drawCells(world);\n});\n\nwindow.addEventListener(\"resize\", () => {\n  reset();\n});\n\npitchSlider.addEventListener(\"input\", () => {\n  pitchValue.textContent = parseFloat(pitchSlider.value).toFixed(1);\n});\n\nrateSlider.addEventListener(\"input\", () => {\n  rateValue.textContent = parseFloat(rateSlider.value).toFixed(1);\n});\n"],"names":["__vite__wasmUrl","__vite__initWasm","opts","url","result","urlContent","bytes","binaryString","i","response","contentType","buffer","wasm","__wbg_set_wasm","val","cachedUint8ArrayMemory0","getUint8ArrayMemory0","lTextDecoder","cachedTextDecoder","MAX_SAFARI_DECODE_BYTES","numBytesDecoded","decodeText","ptr","len","getStringFromWasm0","WASM_VECTOR_LEN","lTextEncoder","cachedTextEncoder","encodeString","arg","view","buf","passStringToWasm0","malloc","realloc","mem","offset","code","ret","cachedDataViewMemory0","getDataViewMemory0","isLikeNone","x","WorldFinalization","World","width","height","consonants","vowels","speech_mode","row","col","cell_type","__wbg_error_7534b8e9a36f1ab4","arg0","arg1","deferred0_0","deferred0_1","__wbg_get_a131a44bd1eb6979","__wbg_length_f00ec12454a5d9fd","__wbg_new_58353953ad2097cc","__wbg_new_8a6f238a6ece86ea","__wbg_push_73fd7b5550ebf707","__wbg_random_ed8db01c11e5a642","__wbg_stack_0ed75d68575b0f3c","ptr1","len1","__wbindgen_init_externref_table","table","__wbindgen_string_get","obj","__wbindgen_string_new","__wbindgen_throw","__vite__wasmModule","__vite__wasmImport_0[\"__wbg_random_ed8db01c11e5a642\"]","__vite__wasmImport_0[\"__wbindgen_string_get\"]","__vite__wasmImport_0[\"__wbindgen_string_new\"]","__vite__wasmImport_0[\"__wbg_new_8a6f238a6ece86ea\"]","__vite__wasmImport_0[\"__wbg_stack_0ed75d68575b0f3c\"]","__vite__wasmImport_0[\"__wbg_error_7534b8e9a36f1ab4\"]","__vite__wasmImport_0[\"__wbg_get_a131a44bd1eb6979\"]","__vite__wasmImport_0[\"__wbg_length_f00ec12454a5d9fd\"]","__vite__wasmImport_0[\"__wbg_new_58353953ad2097cc\"]","__vite__wasmImport_0[\"__wbg_push_73fd7b5550ebf707\"]","__vite__wasmImport_0[\"__wbindgen_throw\"]","__vite__wasmImport_0[\"__wbindgen_init_externref_table\"]","memory","__wbg_world_free","world_new","world_update_char_sets","world_tick","world_width","world_height","world_get_consonant_grid_ptr","world_get_vowel_grid_ptr","world_get_syllable_grid_ptr","world_get_prev_consonant_grid_ptr","world_get_prev_vowel_grid_ptr","world_get_prev_syllable_grid_ptr","world_toggle_cell","__wbindgen_free","__wbindgen_malloc","__wbindgen_realloc","__wbindgen_export_3","__wbindgen_start","wasm.__wbindgen_start","CELL_SIZE","GRID_COLOR","targetFPS","frameDuration","canvas","playPauseButton","speechModeSelect","pitchSlider","pitchValue","rateSlider","rateValue","fontSizeGrid","setupCanvas","ctx","drawGrid","j","drawCells","world","size","consonantPtr","vowelPtr","syllablePtr","prevConsonantPtr","prevVowelPtr","prevSyllablePtr","consonantGrid","vowelGrid","syllableGrid","prevConsonantGrid","prevVowelGrid","prevSyllableGrid","currentCharCode","prevCharCode","randomFactor","sizeVariation","fontSize","char","y","synth","voices","initSpeech","speak","text","resolve","reject","err","utterance","koreanVoice","voice","event","animationId","lastTime","initGame","renderLoop","isPaused","now","syllablesToSpeak","play","pause","reset","getWorld","ALL_INITIAL_CONSONANTS","ALL_MEDIAL_VOWELS","FINAL_CONSONANTS_ARRAY","updateHangulSetOnWasm","HANGUL_BASE_CODE","HANGUL_END_CODE","INITIAL_CONSONANT_MULTIPLIER","MEDIAL_VOWEL_MULTIPLIER","foundConsonants","foundVowels","relativeCode","initialIndex","medialIndex","finalIndex","finalConsonant","hangulInput","applyHangulButton","brushSelect","modeSelect","brushPatterns","boundingRect","scaleX","scaleY","canvasLeft","canvasTop","clickRow","clickCol","selectedBrush","pattern","selectedMode","randomMode"],"mappings":"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"}